module pp

imports

  libstratego-gpp
  runtime/refactoring/-
  include/nabl3-parenthesize
  pp/nabl3-pp

rules
  
  pp-nabl3-string =
    parenthesize-nabl3
    ; prettyprint-SDF-start-symbols
    ; !V([], <id>)
    ; box2text-string(|120)
      
  pp-partial-nabl3-string =
    parenthesize-nabl3
    ; prettyprint-example
    ; !V([], <id>)
    ; box2text-string(|120)
      
  pp-debug :
    ast -> result
    with
       result := <pp-nabl3-string> ast
    <+ <bottomup(try(not(is-string); not(is-list); not(pp-nabl3-string); debug(!"cannot pp ")))> ast
    ;  result := ""

rules
  
  /**
  * Given an old AST and a new AST, pretty-prints the new AST while presevering 
  * layout (e.g. whitespacing and comments) associated with the old AST.
  *
  * Example:
  *   new-text := <construct-textual-change> (old-ast, new-ast)
  */
  construct-textual-change = construct-textual-change(pp-partial-nabl3-string, parenthesize, override-reconstruction, resugar)
